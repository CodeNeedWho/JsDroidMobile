// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext {
    JSDROID_VERSION_CODE = 110
    JSDROID_VERSION = "2.5.2.1"
    JSDROID_SHELL_APK_VERSION = "201906303"
    JSDROID_SHELL_APK_VERSION = "2019071223"
    JSDROID_SHELL_APK_VERSION = "2019072323"
    JSDROID_ADB_VERSION = JSDROID_VERSION
    JSDROID_API_VERSION = JSDROID_VERSION
    JSDROID_COLORS_VERSION = JSDROID_VERSION
    JSDROID_COMMONS_VERSION = JSDROID_VERSION
    JSDROID_DEVICE_API_VERSION = JSDROID_VERSION
    JSDROID_DEVICE_CLIENT_VERSION = JSDROID_VERSION
    JSDROID_DEVICE_HOST_VERSION = JSDROID_VERSION
    JSDROID_FLOATVIEW_VERSION = JSDROID_VERSION
    JSDROID_GROOVY_VERSION = JSDROID_VERSION
    JSDROID_INPUT_VERSION = JSDROID_VERSION
    JSDROID_IPC_VERSION = JSDROID_VERSION
    JSDROID_JPEG_VERSION = JSDROID_VERSION
    JSDROID_MINICAP_VERSION = JSDROID_VERSION
    JSDROID_MVP_VERSION = JSDROID_VERSION
    JSDROID_PACK_VERSION = JSDROID_VERSION
    JSDROID_RUNNER_VERSION = JSDROID_VERSION
    JSDROID_SCRIPT_VERSION = JSDROID_VERSION
    JSDROID_UI_VERSION = JSDROID_VERSION
    JSDROID_UIAUTOMATOR2_VERSION = JSDROID_VERSION
    SUPER_USER_VERSION = "1.0.0.201811281328"
    FAST_JSON_VERSION = "1.2.58"
    COMMONS_IO_VERSION = "1.3.2"
    QMUI_VERSION = "1.2.0"
}
buildscript {

    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }


        google()
        jcenter() {
            url "http://maven.aliyun.com/nexus/content/repositories/jcenter"
        }
        mavenCentral()
        maven { url 'https://jitpack.io' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        classpath "com.aliyun.oss:aliyun-sdk-oss:2.8.3"
        classpath 'org.apache.commons:commons-io:1.3.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.qihoo360.replugin:replugin-host-gradle:2.2.4'
        classpath 'com.qihoo360.replugin:replugin-plugin-gradle:2.2.4'

        classpath "net.lingala.zip4j:zip4j:1.3.2"
    }
}

allprojects {
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }

        google()
        jcenter() {
            url "http://maven.aliyun.com/nexus/content/repositories/jcenter"
        }
        mavenCentral()

        maven { url 'https://jitpack.io' }

    }
    /**防止调用过时的mockableAndroidJar报错**/
//    gradle.taskGraph.whenReady {
//        tasks.each { task ->
//            if (task.name.equals('mockableAndroidJar')) {
//                task.enabled = false
//            }
//        }
//    }


}

task clean(type: Delete) {
    delete rootProject.buildDir
}


task jsdroidApi(type: Zip, dependsOn: ['clean'], group: "jsdroid") {
    metadataCharset "UTF-8"
    extension "zip"
    archiveName = "jsdroid-api.jar"
    destinationDir file('build/')
    def classDir = { module ->
        def filename = "${projectDir}/${module}/build/intermediates/compile_library_classes/release/classes.jar"
        if (new File(filename).exists())
            from zipTree(filename)
    }
    classDir("jsdroid-api")
    classDir("jsdroid-commons")
    classDir("jsdroid-editor")
    classDir("jsdroid-fileview")
    classDir("jsdroid-float-menu")
    classDir("jsdroid-floatview")
    classDir("jsdroid-groovy")
    classDir("jsdroid-input")
    classDir("jsdroid-ipc")
    classDir("jsdroid-runner")
    classDir("jsdroid-script")
    classDir("jsdroid-ui")
    classDir("jsdroid-uiautomator2")
}
